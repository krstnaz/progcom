package com.progcom.controllers;

import com.progcom.domain.Message;
import com.progcom.domain.User;
import com.progcom.repos.MessageRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.view.RedirectView;

import java.util.List;
import java.util.Map;

@Controller
public class MainController
{
    @Autowired  // This means to get the bean called messageRepository which is auto-generated by Spring, we will use it to handle the data
    private MessageRepository messageRepository;


    @GetMapping("/message/list")
    public String getListOfMessage(
            @AuthenticationPrincipal User user,
            Map<String, Object> model)
    {
        Iterable<Message> messages = messageRepository.findAll();
        model.put("messages", messages);

        model.put("user", user);

        return "listOfMessage";
    }

    @PostMapping("/message/filter")
    public String filterMessage(@RequestParam String filter, Map<String, Object> model)
    {
        List<Message> messages = messageRepository.findByTag(filter);
        model.put("messages", messages);
        return "listOfMessage";
    }

    @GetMapping("/message/add")
    public String showAddMessage()
    {
        return "addMessage";
    }

    @PostMapping("/message/add")
    public String postMessage(@AuthenticationPrincipal User user,
                              @RequestParam String text,
                              @RequestParam String link,
                              @RequestParam String tag,
                              Map<String, Object> model)
    {
        Message message = new Message(text, tag, link, user);
        messageRepository.save(message);

        Iterable<Message> messages = messageRepository.findAll();
        model.put("messages", messages);

        return "redirect:/message/list";
    }
}
